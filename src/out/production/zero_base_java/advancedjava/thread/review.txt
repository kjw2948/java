[1강]

<자바 메모리 구조>
1. 메서드 영역 : 프로그램 실행 시 필요한 공통 데이터 관리 ( 프로그램 모든 영역에서 공유)
 - 클래스 정보 : 클래스 실행 코드 , 필드 , 메서드와 생성자 코드 등  모든 실행코드 존재
 - static 영역 : static 변수 보관
 - 런타임 상수 풀 : 프로그램 실행에 필요한 공통 리터럴 상수 보관

2. 스택 영역 : 자바 실행 시, 하나의 실행 스택이 생성 -> 각 스택 프레임은 지역 변수, 중간 연산 결과, 메서드 호출 정보등을 포함
 - 스택 프레임 : 메서드를 호출할 때 마다 하나의 스택 프레임이 쌓임 -> 메서드 종료되면 해당 프레임에서 제거

3. 힙 영역 : 객체와 배열이 생성되는 영역. 가비지 컬렉션이 이뤄지는 주요 영역 -> 사용되지 않는건 GC에 의해 제거됨


<스레드 생성>
Thread 객체를 생성해서 사용하면 된다 -> Thread 클래스를 상속받아 사용하고, run() 메서드를 오버라이딩해서 사용

스레드 객체를 생성한 후 start() 메서드를 호출하면 스레드를 위한 별도 스택 공간을 할당한다 -> 해당 스레드의 run() 메서드가 스택에 올라감


[2강]
인터럽트(Interrupt) : sleep 상태인 스레드를 급하게 깨우거나, 작업 종료를 지시할 수도 있음
                    => WAITING, TIMED_WAITING 같은 대기 상태의 스레드를 직접 깨워서, 작동하는 RUNNABLE 상태로 만들 수 있음
                    바로 Interrupt 가 되는게 아니고, 해당 스레드를 실행하다가 Interrupt Exception 터뜨리는 메서드를 만나면 예외를 터뜨리면서
                    대기 상태에 있던 스레드가 RUNNABLE 상태가 된다.




LockSupport : 스레드를 WAITING 상태로 변경 -> 누가 깨우기 전까지 계속 대기